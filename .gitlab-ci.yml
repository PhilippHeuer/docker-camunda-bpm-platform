####
# GitLab CI
####

###
# Services
###
services:
- docker:stable-dind

###
# Stages
###
stages:
- build
- test

variables:
  REGISTRY_IMAGE: $CI_REGISTRY_IMAGE
  VERSION: 7.10.0

###
# Template: Build Images
###
.build: &build_template
  image: docker:latest
  stage: build
  script:
  - docker build --build-arg BASE_IMAGE=$BASE_IMAGE --build-arg OS_FAMILY=$OS_FAMILY --build-arg APP_SERVER_DIST=$APP_SERVER_DIST --build-arg DB_DRIVERS=$DB_DRIVERS --no-cache -t $REGISTRY_IMAGE:$VERSION-$IMAGE_NAME .
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  - docker push $REGISTRY_IMAGE:$VERSION-$IMAGE_NAME
  only:
  - master
  - tags

###
# Template: Run Tests
###
.test: &test_template
  image: docker.io/envcli/envcli:latest
  stage: test
  before_script:
  - echo "FAIL" > .job_status
  script:
  - docker run -d --name testcontainer $REGISTRY_IMAGE:$VERSION-$IMAGE_NAME
  - sleep 40
  - docker exec testcontainer goss --gossfile=/goss/goss.yml validate
  - echo "SUCCESS" > .job_status
  after_script:
  - if [[ $(cat .job_status) = "FAIL" ]]; then docker logs testcontainer; fi
  - docker rm -f testcontainer
  only:
  - master
  - tags

# Task - Build: Alpine - Tomcat
Build Docker Image - Alpine:
  <<: *build_template
  variables:
    IMAGE_NAME: jdk13-tomcat-alpine
    BASE_IMAGE: openjdk:13-alpine
    OS_FAMILY: alpine
    APP_SERVER_DIST: tomcat
    DB_DRIVERS: postgres

# Task - Build: OracleLinux - Tomcat
Build Docker Image - Oracle Linux:
  <<: *build_template
  variables:
    IMAGE_NAME: jdk13-tomcat-oracle
    BASE_IMAGE: openjdk:13-oracle
    OS_FAMILY: centos
    APP_SERVER_DIST: tomcat
    DB_DRIVERS: postgres

# Task - Test: Alpine - Tomcat
Test Docker Image - Alpine:
  <<: *test_template
  variables:
    IMAGE_NAME: jdk13-tomcat-alpine

# Task - Test: OracleLinux - Tomcat
Test Docker Image - Oracle Linux:
  <<: *test_template
  variables:
    IMAGE_NAME: jdk13-tomcat-oracle
